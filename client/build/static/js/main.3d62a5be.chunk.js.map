{"version":3,"sources":["context/DataProvider.js","components/header/Header.jsx","components/banner/Banner.jsx","components/home/Categories.jsx","constants/config.js","utils/common-utils.js","service/api.js","components/home/post/Post.jsx","components/home/post/Posts.jsx","components/home/Home.jsx","components/create/CreatePost.jsx","components/details/comments/Comment.jsx","components/details/comments/Comments.jsx","components/details/DetailView.jsx","components/create/Update.jsx","components/about/About.jsx","components/contact/Contact.jsx","components/account/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","DataProvider","children","useState","name","username","account","setAccount","Provider","value","Component","styled","AppBar","Container","Toolbar","Header","useNavigate","to","Image","Box","Heading","Typography","SubHeading","Banner","StyledButton","Table","Button","Categories","Link","useSearchParams","category","get","style","textDecoration","variant","API_NOTIFICATION_MESSAGES","loading","title","message","success","requestFailure","responseFailure","networkError","getType","body","params","query","_id","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","request","use","config","TYPE","url","error","Promise","reject","response","processResponse","ProcessError","status","isSuccess","data","isFailure","msg","code","a","sessionStorage","clear","console","log","toJSON","isError","API","key","showUploadProgress","showDownloadProgress","method","responseType","authorization","getItem","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","onDownloadProgress","Object","entries","userLogin","userSignup","getAllPosts","getRefreshToken","uploadFile","createPost","deletePost","getPostById","newComment","getAllComments","deleteComment","updatePost","width","objectFit","borderRadius","height","Text","Details","Post","post","picture","addEllipsis","str","limit","length","substring","src","alt","description","Posts","posts","getPosts","useEffect","fetchData","map","Grid","item","lg","sm","xs","color","margin","fontSize","Home","container","theme","breakpoints","down","StyledFormControl","FormControl","InputTextField","InputBase","Textarea","TextareaAutosize","initialPost","categories","createdDate","Date","CreatePost","navigate","location","useLocation","setPost","file","setFile","useContext","FormData","append","getImage","search","split","savePost","handleChange","e","target","htmlFor","type","id","display","onChange","files","placeholder","onClick","rowsMin","Name","StyledDate","DeleteIcon","Delete","Comment","comment","setToggle","removeComment","prev","date","toDateString","comments","StyledTextArea","initialValue","postId","Comments","setComment","setComments","toggle","getData","addComment","size","EditIcon","Edit","Author","DetailView","useParams","deleteBlog","float","fontWeight","marginLeft","Update","setImageURL","updateBlogPost","Wrapper","About","component","href","GitHub","Instagram","Email","Contact","padding","LoginButton","SignupButton","Error","loginInitialValues","password","signupInitialValues","Login","isUserAuthenticated","login","setLogin","signup","setSignup","showError","toggleAccount","onValueChange","onInputChange","loginUser","setItem","accessToken","refreshToken","signupUser","toggleSignup","TextField","label","textAlign","marginBottom","PrivateRoute","isAuthenticated","token","replace","App","marginTop","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d62a5be.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n\r\nexport const DataContext = createContext(null);\r\n\r\nconst DataProvider = ({ children }) => {\r\n    const [ account, setAccount ] = useState({ name: '', username: '' });\r\n        \r\n    return (\r\n        <DataContext.Provider value={{ \r\n            account, \r\n            setAccount \r\n        }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DataProvider;","\r\nimport { AppBar, Toolbar, styled, Button } from '@mui/material'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Component = styled(AppBar)`\r\n    background: #FFFFFF;\r\n    color: black;\r\n`;\r\n\r\nconst Container = styled(Toolbar)`\r\n    justify-content: center;\r\n    & > a {\r\n        padding: 20px;\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nconst Header = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const logout = async () => navigate('/account');\r\n        \r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Link to='/'>HOME</Link>\r\n                <Link to='/about'>ABOUT</Link>\r\n                <Link to='/contact'>CONTACT</Link>\r\n                <Link to='/account'>LOGOUT</Link>\r\n            </Container>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Header;","import { styled, Box, Typography } from \"@mui/material\";\r\n\r\nconst Image = styled(Box)`\r\n  width: 100%;\r\n  background: url(https://images.pexels.com/photos/1714208/pexels-photo-1714208.jpeg)\r\n    center/55% repeat-x #000;\r\n  height: 50vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n  font-size: 70px;\r\n  color: #ffffff;\r\n  line-height: 1;\r\n`;\r\n\r\nconst SubHeading = styled(Typography)`\r\n  font-size: 20px;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <Image>\r\n      <Heading>BLOG</Heading>\r\n      <SubHeading>Sheraz Hameed</SubHeading>\r\n    </Image>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import {\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\n\r\nimport { categories } from \"../../constants/data\";\r\n\r\nconst StyledTable = styled(Table)`\r\n  border: 1px solid rgba(224, 224, 224, 1);\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 20px;\r\n  width: 85%;\r\n  background: #6495ed;\r\n  color: #fff;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n\r\nconst Categories = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const category = searchParams.get(\"category\");\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/create?category=${category || \"\"}`}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <StyledButton variant=\"contained\">Create Blog</StyledButton>\r\n      </Link>\r\n\r\n      {/* <StyledTable>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <StyledLink to={\"/\"}>\r\n                                All Categories\r\n                            </StyledLink>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        categories.map(category => (\r\n                            <TableRow key={category.id}>\r\n                                <TableCell>\r\n                                    <StyledLink to={`/?category=${category.type}`}>\r\n                                        {category.type}\r\n                                    </StyledLink>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </StyledTable> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","// API NOTIFICATION MESSAGES\r\nexport const API_NOTIFICATION_MESSAGES = {\r\n    loading: {\r\n        title: \"Loading...\",\r\n        message: \"Data is being loaded. Please wait\"\r\n    },\r\n    success: {\r\n        title: \"Success\",\r\n        message: \"Data successfully loaded\"\r\n    },\r\n    requestFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occur while parsing request data\"\r\n    },\r\n    responseFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occur while fetching response from server. Please try again\"\r\n    },\r\n    networkError: {\r\n        title: \"Error!\",\r\n        message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\r\n    }\r\n}\r\n\r\n// API SERVICE URL\r\n// SAMPLE REQUEST\r\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\r\nexport const SERVICE_URLS = {\r\n    userLogin: { url: '/login', method: 'POST' },\r\n    userSignup: { url: '/signup', method: 'POST' },\r\n    getAllPosts: { url: '/posts', method: 'GET', params: true },\r\n    getRefreshToken: { url: '/token', method: 'POST' },\r\n    uploadFile: { url: 'file/upload', method: 'POST' },\r\n    createPost: { url: 'create', method: 'POST' },\r\n    deletePost: { url: 'delete', method: 'DELETE', query: true },\r\n    getPostById: { url: 'post', method: 'GET', query: true },\r\n    newComment: { url: '/comment/new', method: 'POST' },\r\n    getAllComments: { url: 'comments', method: 'GET', query: true },\r\n    deleteComment: { url: 'comment/delete', method: 'DELETE', query: true },\r\n    updatePost: { url: 'update', method: 'PUT', query: true }\r\n}","\r\n\r\nexport const getAccessToken = () => {\r\n    return sessionStorage.getItem('accessToken');\r\n}\r\n\r\nexport const getRefreshToken = () => {\r\n    return sessionStorage.getItem('refreshToken');\r\n}\r\n\r\nexport const setAccessToken = (accessToken) => {\r\n    sessionStorage.setItem('accessToken', `Bearer ${accessToken}`);\r\n}\r\n\r\nexport const setRefreshToken = (refreshToken) => {\r\n    sessionStorage.setItem('refreshToken', `Bearer ${refreshToken}`);\r\n}\r\n\r\nexport const getType = (value, body) => {\r\n    if (value.params) {\r\n        return { params: body }\r\n    } else if (value.query) {\r\n        if (typeof body === 'object') {\r\n            return { query: body._id }\r\n        } else {\r\n            return { query: body }\r\n        }\r\n    }\r\n    return {};\r\n}","import axios from 'axios';\r\n\r\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config';\r\nimport { getAccessToken, getRefreshToken, setAccessToken, getType } from '../utils/common-utils';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 10000, \r\n    headers: {\r\n        \"content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function(config) {\r\n        if (config.TYPE.params) {\r\n            config.params = config.TYPE.params\r\n        } else if (config.TYPE.query) {\r\n            config.url = config.url + '/' + config.TYPE.query;\r\n        }\r\n        return config;\r\n    },\r\n    function(error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n    function(response) {\r\n        // Stop global loader here\r\n        return processResponse(response);\r\n    },\r\n    function(error) {\r\n        // Stop global loader here\r\n        return Promise.reject(ProcessError(error));\r\n    }\r\n)\r\n\r\n///////////////////////////////\r\n// If success -> returns { isSuccess: true, data: object }\r\n// If fail -> returns { isFailure: true, status: string, msg: string, code: int }\r\n//////////////////////////////\r\nconst processResponse = (response) => {\r\n    if (response?.status === 200) {\r\n        return { isSuccess: true, data: response.data }\r\n    } else {\r\n        return {\r\n            isFailure: true,\r\n            status: response?.status,\r\n            msg: response?.msg,\r\n            code: response?.code\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////\r\n// If success -> returns { isSuccess: true, data: object }\r\n// If fail -> returns { isError: true, status: string, msg: string, code: int }\r\n//////////////////////////////\r\nconst ProcessError = async (error) => {\r\n    if (error.response) {\r\n        // Request made and server responded with a status code \r\n        // that falls out of the range of 2xx\r\n        if (error.response?.status === 403) {\r\n            // const { url, config } = error.response;\r\n            // console.log(error);\r\n            // try {\r\n            //     let response = await API.getRefreshToken({ token: getRefreshToken() });\r\n            //     if (response.isSuccess) {\r\n                    sessionStorage.clear();\r\n            //         setAccessToken(response.data.accessToken);\r\n\r\n            //         const requestData = error.toJSON();\r\n\r\n            //         let response1 = await axios({\r\n            //             method: requestData.config.method,\r\n            //             url: requestData.config.baseURL + requestData.config.url,\r\n            //             headers: { \"content-type\": \"application/json\", \"authorization\": getAccessToken() },\r\n            //             params: requestData.config.params\r\n            //         });\r\n            //     }\r\n            // } catch (error) {\r\n            //     return Promise.reject(error)\r\n            // }\r\n        } else {\r\n            console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n            return {\r\n                isError: true,\r\n                msg: API_NOTIFICATION_MESSAGES.responseFailure,\r\n                code: error.response.status\r\n            }\r\n        }\r\n    } else if (error.request) { \r\n        // The request was made but no response was received\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.requestFailure,\r\n            code: \"\"\r\n        }\r\n    } else { \r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.networkError,\r\n            code: \"\"\r\n        }\r\n    }\r\n}\r\n\r\nconst API = {};\r\n\r\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\r\n    API[key] = (body, showUploadProgress, showDownloadProgress) =>\r\n        axiosInstance({\r\n            method: value.method,\r\n            url: value.url,\r\n            data: value.method === 'DELETE' ? '' : body,\r\n            responseType: value.responseType,\r\n            headers: {\r\n                authorization: getAccessToken(),\r\n            },\r\n            TYPE: getType(value, body),\r\n            onUploadProgress: function(progressEvent) {\r\n                if (showUploadProgress) {\r\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showUploadProgress(percentCompleted);\r\n                }\r\n            },\r\n            onDownloadProgress: function(progressEvent) {\r\n                if (showDownloadProgress) {\r\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showDownloadProgress(percentCompleted);\r\n                }\r\n            }\r\n        });\r\n}\r\n\r\nexport { API };","import { styled, Box, Typography } from \"@mui/material\";\r\n\r\nconst Container = styled(Box)`\r\n  border: 1px solid #d3cede;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  & > img,\r\n  & > p {\r\n    padding: 0 5px 5px 5px;\r\n  }\r\n`;\r\n\r\nconst Image = styled(\"img\")({\r\n  width: \"100%\",\r\n  objectFit: \"cover\",\r\n  borderRadius: \"10px 10px 0 0\",\r\n  height: 150,\r\n});\r\n\r\nconst Text = styled(Typography)`\r\n    color: #878787\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Details = styled(Typography)`\r\n  font-size: 14px;\r\n  word-break: break-word;\r\n`;\r\n\r\nconst Post = ({ post }) => {\r\n  const url = post.picture\r\n    ? post.picture\r\n    : \"https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=752&q=80\";\r\n\r\n  const addEllipsis = (str, limit) => {\r\n    return str.length > limit ? str.substring(0, limit) + \"...\" : str;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Image src={url} alt=\"post\" />\r\n      {/* <Text>{post.categories}</Text> */}\r\n      <Heading>{addEllipsis(post.title, 20)}</Heading>\r\n      <Text>Author: {post.username}</Text>\r\n      <Details>{addEllipsis(post.description, 100)}</Details>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { Grid, Box } from '@mui/material';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n\r\n// import { getAllPosts } from '../../../service/api';\r\nimport { API } from '../../../service/api';\r\n\r\n//components\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n    const [posts, getPosts] = useState([]);\r\n    \r\n    const [searchParams] = useSearchParams();\r\n    const category = searchParams.get('category');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => { \r\n            let response = await API.getAllPosts({ category : category || '' });\r\n            if (response.isSuccess) {\r\n                getPosts(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [category]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                posts?.length ? posts.map(post => (\r\n                    <Grid item lg={3} sm={4} xs={12}>\r\n                        <Link style={{textDecoration: 'none', color: 'inherit'}} to={`details/${post._id}`}>\r\n                            <Post post={post} />\r\n                        </Link>\r\n                    </Grid>\r\n                )) : <Box style={{color: '878787', margin: '30px 80px', fontSize: 18}}>\r\n                        No data is available for selected category\r\n                    </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts;","import { Grid } from \"@mui/material\";\r\n\r\n//components\r\nimport Banner from \"../banner/Banner\";\r\nimport Categories from \"./Categories\";\r\nimport Posts from \"./post/Posts\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <Grid container>\r\n        <Grid item lg={2} xs={12} sm={2}>\r\n          <Categories />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={10} lg={10}>\r\n          <Posts />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { styled, Box, TextareaAutosize, Button, InputBase, FormControl  } from '@mui/material';\r\nimport { AddCircle as Add } from '@mui/icons-material';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n    flex: 1;\r\n    margin: 0 30px;\r\n    font-size: 25px;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 50px;\r\n    font-size: 18px;\r\n    &:focus-visible {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst initialPost = {\r\n    title: '',\r\n    description: '',\r\n    picture: '',\r\n    username: '',\r\n    categories: '',\r\n    createdDate: new Date()\r\n}\r\n\r\nconst CreatePost = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [post, setPost] = useState(initialPost);\r\n    const [file, setFile] = useState('');\r\n    const { account } = useContext(DataContext);\r\n\r\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    useEffect(() => {\r\n        const getImage = async () => { \r\n            if(file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n                \r\n                const response = await API.uploadFile(data);\r\n                post.picture = response.data;\r\n            }\r\n        }\r\n        getImage();\r\n        post.categories = location.search?.split('=')[1] || 'All';\r\n        post.username = account.username;\r\n    }, [file])\r\n\r\n    const savePost = async () => {\r\n        await API.createPost(post);\r\n        navigate('/');\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={url} alt=\"post\" />\r\n\r\n            <StyledFormControl>\r\n                <label htmlFor=\"fileInput\">\r\n                    <Add fontSize=\"large\" color=\"action\" />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <InputTextField onChange={(e) => handleChange(e)} name='title' placeholder=\"Title\" />\r\n                <Button onClick={() => savePost()} variant=\"contained\" color=\"primary\">Publish</Button>\r\n            </StyledFormControl>\r\n\r\n            <Textarea\r\n                rowsMin={5}\r\n                placeholder=\"Tell your story...\"\r\n                name='description'\r\n                onChange={(e) => handleChange(e)} \r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import { useContext } from \"react\";\r\n\r\nimport { Typography, Box, styled } from \"@mui/material\";\r\nimport { Delete } from '@mui/icons-material';\r\n\r\nimport { API } from '../../../service/api';\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\n\r\nconst Component = styled(Box)`\r\n    margin-top: 30px;\r\n    background: #F5F5F5;\r\n    padding: 10px;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst Name = styled(Typography)`\r\n    font-weight: 600,\r\n    font-size: 18px;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst StyledDate = styled(Typography)`\r\n    font-size: 14px;\r\n    color: #878787;\r\n`;\r\n\r\nconst DeleteIcon = styled(Delete)`\r\n    margin-left: auto;\r\n`;\r\n\r\nconst Comment = ({ comment, setToggle }) => {\r\n\r\n    const { account } = useContext(DataContext)\r\n    \r\n    const removeComment = async () => {\r\n       await API.deleteComment(comment._id);\r\n       setToggle(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Name>{comment.name}</Name>\r\n                <StyledDate>{new Date(comment.date).toDateString()}</StyledDate>\r\n                { comment.name === account.username && <DeleteIcon onClick={() => removeComment()} /> }\r\n            </Container>\r\n            <Typography>{comment.comments}</Typography>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Comment;","import { useState, useEffect, useContext } from \"react\";\r\nimport { Box, TextareaAutosize, Button, styled } from \"@mui/material\";\r\n\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\n\r\nimport { API } from \"../../../service/api\";\r\n\r\n//components\r\nimport Comment from \"./Comment\";\r\n\r\nconst Container = styled(Box)`\r\n  margin-top: 100px;\r\n  display: flex;\r\n`;\r\n\r\nconst Image = styled(\"img\")({\r\n  width: 50,\r\n  height: 50,\r\n  borderRadius: \"50%\",\r\n});\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n  height: 100px !important;\r\n  width: 100%;\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst initialValue = {\r\n  name: \"\",\r\n  postId: \"\",\r\n  date: new Date(),\r\n  comments: \"\",\r\n};\r\n\r\nconst Comments = ({ post }) => {\r\n  const url = \"https://static.thenounproject.com/png/12017-200.png\";\r\n\r\n  const [comment, setComment] = useState(initialValue);\r\n  const [comments, setComments] = useState([]);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const { account } = useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const response = await API.getAllComments(post._id);\r\n      if (response.isSuccess) {\r\n        setComments(response.data);\r\n      }\r\n    };\r\n    getData();\r\n  }, [toggle, post]);\r\n\r\n  const handleChange = (e) => {\r\n    setComment({\r\n      ...comment,\r\n      name: account.username,\r\n      postId: post._id,\r\n      comments: e.target.value,\r\n    });\r\n  };\r\n\r\n  const addComment = async () => {\r\n    await API.newComment(comment);\r\n    setComment(initialValue);\r\n    setToggle((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Container>\r\n        <Image src={url} alt=\"dp\" />\r\n        <StyledTextArea\r\n          rowsMin={5}\r\n          placeholder=\"Share your thoughts!\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={comment.comments}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          style={{ height: 40 }}\r\n          onClick={(e) => addComment(e)}\r\n        >\r\n          Post\r\n        </Button>\r\n      </Container>\r\n      <Box>\r\n        {comments &&\r\n          comments.length > 0 &&\r\n          comments.map((comment) => (\r\n            <Comment comment={comment} setToggle={setToggle} />\r\n          ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Box, Typography, styled } from '@mui/material';\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport { API } from '../../service/api';\r\n\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\n// components\r\nimport Comments from './comments/Comments';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    },\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst EditIcon = styled(Edit)`\r\n    margin: 5px;\r\n    padding: 5px;\r\n    border: 1px solid #878787;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DeleteIcon = styled(Delete)`\r\n    margin: 5px;\r\n    padding: 5px;\r\n    border: 1px solid #878787;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n    font-size: 38px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    margin: 50px 0 10px 0;\r\n`;\r\n\r\nconst Author = styled(Box)(({ theme }) => ({\r\n    color: '#878787',\r\n    display: 'flex',\r\n    margin: '20px 0',\r\n    [theme.breakpoints.down('sm')]: {\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst DetailView = () => {\r\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    const [post, setPost] = useState({});\r\n    const { account } = useContext(DataContext);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await API.getPostById(id);\r\n            if (response.isSuccess) {\r\n                setPost(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const deleteBlog = async () => {  \r\n        await API.deletePost(post._id);\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={post.picture || url} alt=\"post\" />\r\n            <Box style={{ float: 'right' }}>\r\n                {   \r\n                    account.username === post.username && \r\n                    <>  \r\n                        <Link to={`/update/${post._id}`}><EditIcon color=\"primary\" /></Link>\r\n                        <DeleteIcon onClick={() => deleteBlog()} color=\"error\" />\r\n                    </>\r\n                }\r\n            </Box>\r\n            <Heading>{post.title}</Heading>\r\n\r\n            <Author>\r\n                <Link to={`/?username=${post.username}`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                    <Typography>Author: <span style={{fontWeight: 600}}>{post.username}</span></Typography>\r\n                </Link>\r\n                <Typography style={{marginLeft: 'auto'}}>{new Date(post.createdDate).toDateString()}</Typography>\r\n            </Author>\r\n\r\n            <Typography>{post.description}</Typography>\r\n            <Comments post={post} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DetailView;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Box, styled, TextareaAutosize, Button, FormControl, InputBase } from '@mui/material';\r\nimport { AddCircle as Add } from '@mui/icons-material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n    flex: 1;\r\n    margin: 0 30px;\r\n    font-size: 25px;\r\n`;\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 50px;\r\n    font-size: 18px;\r\n    &:focus-visible {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst initialPost = {\r\n    title: '',\r\n    description: '',\r\n    picture: '',\r\n    username: 'codeforinterview',\r\n    categories: 'Tech',\r\n    createdDate: new Date()\r\n}\r\n\r\nconst Update = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [post, setPost] = useState(initialPost);\r\n    const [file, setFile] = useState('');\r\n    const [imageURL, setImageURL] = useState('');\r\n\r\n    const { id } = useParams();\r\n\r\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await API.getPostById(id);\r\n            if (response.isSuccess) {\r\n                setPost(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getImage = async () => { \r\n            if(file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n                \r\n                const response = await API.uploadFile(data);\r\n                if (response.isSuccess) {\r\n                    post.picture = response.data;\r\n                    setImageURL(response.data);    \r\n                }\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file])\r\n\r\n    const updateBlogPost = async () => {\r\n        await API.updatePost(post);\r\n        navigate(`/details/${id}`);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={post.picture || url} alt=\"post\" />\r\n\r\n            <StyledFormControl>\r\n                <label htmlFor=\"fileInput\">\r\n                    <Add fontSize=\"large\" color=\"action\" />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <InputTextField onChange={(e) => handleChange(e)} value={post.title} name='title' placeholder=\"Title\" />\r\n                <Button onClick={() => updateBlogPost()} variant=\"contained\" color=\"primary\">Update</Button>\r\n            </StyledFormControl>\r\n\r\n            <StyledTextArea\r\n                rowsMin={5}\r\n                placeholder=\"Tell your story...\"\r\n                name='description'\r\n                onChange={(e) => handleChange(e)} \r\n                value={post.description}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Update;","import { Box, styled, Typography, Link } from \"@mui/material\";\r\nimport { GitHub, Instagram, Email } from \"@mui/icons-material\";\r\n\r\nconst Banner = styled(Box)`\r\n  background-image: url(https://www.wallpapertip.com/wmimgs/23-236943_us-wallpaper-for-website.jpg);\r\n  width: 100%;\r\n  height: 50vh;\r\n  background-position: left 0px bottom 0px;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n  padding: 20px;\r\n  & > h3,\r\n  & > h5 {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n  color: #878787;\r\n`;\r\n\r\nconst About = () => {\r\n  return (\r\n    <Box>\r\n      <Banner />\r\n      <Wrapper>\r\n        <Typography variant=\"h3\">Code for Interview</Typography>\r\n        <Text variant=\"h5\">\r\n          I'm a Computer Scientist based in Lahore. I've built websites and\r\n          desktop applications.\r\n          <br />\r\n          If you are interested, you can view some of my favorite projects here\r\n          <Box component=\"span\" style={{ marginLeft: 5 }}>\r\n            <Link\r\n              href=\"https://github.com/sharazhameed\"\r\n              color=\"inherit\"\r\n              target=\"_blank\"\r\n            >\r\n              <GitHub />\r\n            </Link>\r\n          </Box>\r\n        </Text>\r\n        <Text variant=\"h5\">\r\n          Need something built or simply want to have chat? Reach out to me on\r\n          <Box component=\"span\" style={{ marginLeft: 5 }}>\r\n            <Link\r\n              href=\"https://www.instagram.com/meh_shari/\"\r\n              color=\"inherit\"\r\n              target=\"_blank\"\r\n            >\r\n              <Instagram />\r\n            </Link>\r\n          </Box>\r\n          or send me an Email\r\n          <Link\r\n            href=\"mailto:sharaz2232@gmail.com?Subject=This is a subject\"\r\n            target=\"_blank\"\r\n            color=\"inherit\"\r\n          >\r\n            <Email />\r\n          </Link>\r\n          .\r\n        </Text>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Box, styled, Typography, Link } from \"@mui/material\";\r\nimport { GitHub, Instagram, Email } from \"@mui/icons-material\";\r\n\r\nconst Banner = styled(Box)`\r\n  background-image: url(http://mrtaba.ir/image/bg2.jpg);\r\n  width: 100%;\r\n  height: 50vh;\r\n  background-position: left 0px top -100px;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n  padding: 20px;\r\n  & > h3,\r\n  & > h5 {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n  color: #878787;\r\n`;\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Box>\r\n      <Banner />\r\n      <Wrapper>\r\n        <Typography variant=\"h3\">Getting in touch is easy!</Typography>\r\n        <Text variant=\"h5\">\r\n          Reach out to me on\r\n          <Link\r\n            href=\"https://www.instagram.com/meh_shari/\"\r\n            color=\"inherit\"\r\n            target=\"_blank\"\r\n          >\r\n            <Instagram />\r\n          </Link>\r\n          or send me an Email\r\n          <Link\r\n            href=\"mailto:sharaz2232@gmail.com?Subject=This is a subject\"\r\n            target=\"_blank\"\r\n            color=\"inherit\"\r\n          >\r\n            <Email />\r\n          </Link>\r\n          .\r\n        </Text>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { TextField, Box, Button, Typography, styled } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { API } from \"../../service/api\";\r\nimport { DataContext } from \"../../context/DataProvider\";\r\n\r\nconst Component = styled(Box)`\r\n  width: 400px;\r\n  margin: auto;\r\n  box-shadow: 5px 2px 5px 2px rgb(0 0 0/ 0.6);\r\n`;\r\n\r\nconst Image = styled(\"img\")({\r\n  width: 100,\r\n  display: \"flex\",\r\n  margin: \"auto\",\r\n  padding: \"50px 0 0\",\r\n});\r\n\r\nconst Wrapper = styled(Box)`\r\n  padding: 25px 35px;\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: auto;\r\n  flex-direction: column;\r\n  & > div,\r\n  & > button,\r\n  & > p {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst LoginButton = styled(Button)`\r\n  text-transform: none;\r\n  background: #fb641b;\r\n  color: #fff;\r\n  height: 48px;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst SignupButton = styled(Button)`\r\n  text-transform: none;\r\n  background: #fff;\r\n  color: #2874f0;\r\n  height: 48px;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 4px 0 rgb(0 0 0 / 20%);\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n  color: #878787;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Error = styled(Typography)`\r\n  font-size: 10px;\r\n  color: #ff6161;\r\n  line-height: 0;\r\n  margin-top: 10px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst loginInitialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst signupInitialValues = {\r\n  name: \"\",\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Login = ({ isUserAuthenticated }) => {\r\n  const [login, setLogin] = useState(loginInitialValues);\r\n  const [signup, setSignup] = useState(signupInitialValues);\r\n  const [error, showError] = useState(\"\");\r\n  const [account, toggleAccount] = useState(\"login\");\r\n\r\n  const navigate = useNavigate();\r\n  const { setAccount } = useContext(DataContext);\r\n\r\n  const imageURL =\r\n    \"https://www.sesta.it/wp-content/uploads/2021/03/logo-blog-sesta-trasparente.png\";\r\n\r\n  useEffect(() => {\r\n    showError(false);\r\n  }, [login]);\r\n\r\n  const onValueChange = (e) => {\r\n    setLogin({ ...login, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    setSignup({ ...signup, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginUser = async () => {\r\n    let response = await API.userLogin(login);\r\n    if (response.isSuccess) {\r\n      showError(\"\");\r\n\r\n      sessionStorage.setItem(\r\n        \"accessToken\",\r\n        `Bearer ${response.data.accessToken}`\r\n      );\r\n      sessionStorage.setItem(\r\n        \"refreshToken\",\r\n        `Bearer ${response.data.refreshToken}`\r\n      );\r\n      setAccount({\r\n        name: response.data.name,\r\n        username: response.data.username,\r\n      });\r\n\r\n      isUserAuthenticated(true);\r\n      setLogin(loginInitialValues);\r\n      navigate(\"/\");\r\n    } else {\r\n      showError(\"Something went wrong! please try again later\");\r\n    }\r\n  };\r\n\r\n  const signupUser = async () => {\r\n    let response = await API.userSignup(signup);\r\n    if (response.isSuccess) {\r\n      showError(\"\");\r\n      setSignup(signupInitialValues);\r\n      toggleAccount(\"login\");\r\n    } else {\r\n      showError(\"Something went wrong! please try again later\");\r\n    }\r\n  };\r\n\r\n  const toggleSignup = () => {\r\n    account === \"signup\" ? toggleAccount(\"login\") : toggleAccount(\"signup\");\r\n  };\r\n\r\n  return (\r\n    <Component>\r\n      <Box>\r\n        <Image src={imageURL} alt=\"blog\" />\r\n        {account === \"login\" ? (\r\n          <Wrapper>\r\n            <TextField\r\n              variant=\"standard\"\r\n              value={login.username}\r\n              onChange={(e) => onValueChange(e)}\r\n              name=\"username\"\r\n              label=\"Enter Username\"\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              type=\"password\"\r\n              value={login.password}\r\n              onChange={(e) => onValueChange(e)}\r\n              name=\"password\"\r\n              label=\"Enter Password\"\r\n            />\r\n\r\n            {error && <Error>{error}</Error>}\r\n\r\n            <LoginButton variant=\"contained\" onClick={() => loginUser()}>\r\n              Login\r\n            </LoginButton>\r\n            <Text style={{ textAlign: \"center\" }}>OR</Text>\r\n            <SignupButton\r\n              onClick={() => toggleSignup()}\r\n              style={{ marginBottom: 50 }}\r\n            >\r\n              Create an account\r\n            </SignupButton>\r\n          </Wrapper>\r\n        ) : (\r\n          <Wrapper>\r\n            <TextField\r\n              variant=\"standard\"\r\n              onChange={(e) => onInputChange(e)}\r\n              name=\"name\"\r\n              label=\"Enter Name\"\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              onChange={(e) => onInputChange(e)}\r\n              name=\"username\"\r\n              label=\"Enter Username\"\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              type=\"password\"\r\n              onChange={(e) => onInputChange(e)}\r\n              name=\"password\"\r\n              label=\"Enter Password\"\r\n            />\r\n\r\n            <SignupButton onClick={() => signupUser()}>Signup</SignupButton>\r\n            <Text style={{ textAlign: \"center\" }}>OR</Text>\r\n            <LoginButton variant=\"contained\" onClick={() => toggleSignup()}>\r\n              Already have an account\r\n            </LoginButton>\r\n          </Wrapper>\r\n        )}\r\n      </Box>\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\nimport { BrowserRouter, Routes, Route, Navigate, Outlet } from 'react-router-dom';\r\n\r\n//components\r\nimport DataProvider from './context/DataProvider';\r\nimport Header from './components/header/Header';\r\nimport Home from './components/home/Home';\r\nimport CreatePost from './components/create/CreatePost';\r\nimport DetailView from './components/details/DetailView';\r\nimport Update from './components/create/Update';\r\nimport About from './components/about/About';\r\nimport Contact from './components/contact/Contact';\r\nimport Login from './components/account/Login';\r\n\r\nconst PrivateRoute = ({ isAuthenticated, ...props }) => {\r\n  const token = sessionStorage.getItem('accessToken');\r\n  return isAuthenticated && token ? \r\n    <>\r\n      <Header />\r\n      <Outlet />\r\n    </> : <Navigate replace to='/account' />\r\n};\r\n\r\nfunction App() {\r\n\r\n  const [isAuthenticated, isUserAuthenticated] = useState(false);\r\n\r\n  return (\r\n    <DataProvider>\r\n      <BrowserRouter>\r\n        <Box style={{ marginTop: 64 }}>\r\n          <Routes>\r\n            <Route path='/account' element={<Login isUserAuthenticated={isUserAuthenticated} />} />\r\n            \r\n            <Route path='/' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/' element={<Home />} />\r\n            </Route>\r\n\r\n            <Route path='/create' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/create' element={<CreatePost />} />\r\n            </Route>\r\n\r\n            <Route path='/details/:id' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/details/:id' element={<DetailView />} />\r\n            </Route>\r\n\r\n            <Route path='/update/:id' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/update/:id' element={<Update />} />\r\n            </Route>\r\n\r\n            <Route path='/about' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/about' element={<About />} />\r\n            </Route>\r\n\r\n            <Route path='/contact' element={<PrivateRoute isAuthenticated={isAuthenticated} />} >\r\n              <Route path='/contact' element={<Contact />} />\r\n            </Route>\r\n          </Routes>\r\n        </Box>\r\n      </BrowserRouter>\r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}